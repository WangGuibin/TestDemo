//
//  PrefixHeader.pch
//  TestDemo
//
//  Created by mac on 2019/9/29.
//  Copyright © 2019 mac. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
#ifdef __OBJC__
#import <AFNetworking.h>  
#import <UIImageView+WebCache.h>
#import <UIView+Yoga.h>
#import <Masonry.h>
#import <MJRefresh.h>   
#import <YYText.h>
#import <YYModel.h>
#import <ReactiveObjC.h>
#import <IGListKit/IGListKit.h>
#import <IGListDiffKit/IGListDiffable.h>
#import <JXCategoryView.h>
#import <JXPagerView.h> 
#import <IQKeyboardManager/IQKeyboardManager.h>
#import "LBXPermission.h"
#import <LBXScanView.h>
#import <LBXScanViewController.h>
#import "MBProgressHUD+MJ.h"
#import "NSArray+Sudoku.h"


#import <WGBCocoa.h>
#import <WGBCustomPopUpView/WGBCustomPopUpView.h>
#import <WGBEasyMarqueeView/WGBEasyMarqueeView.h>
#import <WGBWaveLayerButton/WGBWaveLayerButton.h>
#import <WGBCommonAlertSheetView/WGBCommonAlertSheetView.h>
#import <WGBRepairedOrientationLabel/WGBRepairedOrientationLabel.h>
#import "WGBCustomButton.h"
#import "WGBAlertTool.h"
#import "CATransition+WGBExtension.h"
#import "NSMutableAttributedString+WGBExtension.h"
#import "UIView+WGBCornerCliper.h"
#import "WebCommonDemoViewController.h"
#import "WGBCustomNavgationViewController.h"
#import "Constants.h"

#endif


///颜色随机
#define randomColor        [UIColor colorWithRed:arc4random()%256/255.0 green:arc4random()%256/255.0 blue:arc4random()%256/255.0 alpha:1.0]
/// 获取RGBA颜色
#define RGBA(r,g,b,a)      [UIColor colorWithRed:r/255.0f green:g/255.0f blue:b/255.0f alpha:a]
/// 获取RGB颜色
#define RGB(r,g,b)         RGBA(r,g,b,1.0f)
/// 拿到通知中心实例
#define kNotificationCenter [NSNotificationCenter defaultCenter]
//View圆角和加边框 对象,圆角大小,边框宽度,颜色
#define ViewBorderRadius(View,Radius,Width,Color)\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES];\
[View.layer setBorderWidth:(Width)];\
[View.layer setBorderColor:[Color CGColor]]

// View圆角 对象,圆角大小
#define ViewRadius(View,Radius)\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES]




#ifndef KWIDTH
#define KWIDTH [UIScreen mainScreen].bounds.size.width
#endif

#ifndef KHIGHT
#define KHIGHT [UIScreen mainScreen].bounds.size.height
#endif


// NS_INLINE BOOL isIphoneX(){
//    if(@available(iOS 11.0, *)) {
//        UIWindow *window = [UIApplication sharedApplication].keyWindow;
//        CGFloat bottomSafeInset = window.safeAreaInsets.bottom;
//        if(bottomSafeInset == 34.0f || bottomSafeInset == 21.0f){
//            return YES;
//        }
//    }
//    return NO;
//}

//状态栏高度
#define kStatusBarHeight [[UIApplication sharedApplication] statusBarFrame].size.height
//导航栏+状态栏
#define kNavBarHeight   (44.0 + kStatusBarHeight)
//tabBar高度
#define kTabBarHeight  ([[UIApplication sharedApplication] statusBarFrame].size.height>20?83:49)

#define IS_Iphone_X   isIphoneX()
#define kBottomHeight (IS_Iphone_X? 34 : 0)


///适配iOS 11 scrollView向下偏移
#define  adjustsScrollViewInsets_NO(scrollView,vc)\
do { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"") \
if ([UIScrollView instancesRespondToSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:")]) {\
[scrollView   performSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:") withObject:@(2)];\
} else {\
vc.automaticallyAdjustsScrollViewInsets = NO;\
}\
_Pragma("clang diagnostic pop") \
} while (0)


/// 拿到通知中心实例
#define kNotificationCenter [NSNotificationCenter defaultCenter]

//本地存储UserDefault
#define kUserDefaults  [NSUserDefaults standardUserDefaults]

///AppDeleagte
#define kAppdelegate  AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];

///关键盘
#define kCloseKeyboard       [[UIApplication sharedApplication].keyWindow endEditing:YES]

///RootVC
#define kRootVC  [UIApplication sharedApplication].keyWindow.rootViewController

//keyWindow
#define kWindow [UIApplication sharedApplication].keyWindow

//app名称
#define kAppName [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleDisplayName"]

//app版本
#define kAppVersion [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"]


//获取当前系统版本
#define kCurrentSystemVersion  [ [ [UIDevice currentDevice]  systemVersion ] floatValue]

//加载比较大的图片 优化性能
#define kLoadImagae(file,type) [UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:file ofType:type]]
//定义UIImage对象
#define kImageNamed(imgName)  [UIImage imageNamed:imgName]

//获取一段时间间隔  起点  终点
#define kStartTime CFAbsoluteTime start = CFAbsoluteTimeGetCurrent();
#define kEndTime  NSLog(@"Time: %f", CFAbsoluteTimeGetCurrent() - start);

//设置字体
#define kPingFang(F)  [UIFont fontWithName:@"PingFang SC" size:(F)]
#define kBoldPingFang(A) [UIFont fontWithName:@"PingFang-SC-Medium" size:A]
#define kFont(a) [UIFont fontWithName:@"Avenir-Light" size:(a)]

//系统默认字体
#define KFontSize(A)  [UIFont systemFontOfSize: A]
#define kFontBold(A)  [UIFont boldSystemFontOfSize:A]


//自定义TODO宏 http://blog.sunnyxx.com/2015/03/01/todo-macro/
#define STRINGIFY(S) #S
#define DEFER_STRINGIFY(S) STRINGIFY(S)
#define PRAGMA_MESSAGE(MSG) _Pragma(STRINGIFY(message(MSG)))
#define FORMATTED_MESSAGE(MSG) "[TODO-" DEFER_STRINGIFY(__COUNTER__) "] " MSG " \n" \
DEFER_STRINGIFY(__FILE__) " line " DEFER_STRINGIFY(__LINE__)
#define KEYWORDIFY try {} @catch (...) {}
// 最终使用下面的宏
#define TODO(MSG) KEYWORDIFY PRAGMA_MESSAGE(FORMATTED_MESSAGE(MSG))



#endif /* PrefixHeader_pch */
